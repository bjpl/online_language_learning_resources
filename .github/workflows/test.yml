name: Automated Testing Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: Run integration tests
        run: npm run test:integration

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Run performance benchmarks
        run: npm run test:performance

      - name: Generate coverage report
        run: npm run test:coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-${{ matrix.os }}-node-${{ matrix.node-version }}
          fail_ci_if_error: false

      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}-node-${{ matrix.node-version }}
          path: |
            coverage/
            test-results/
          retention-days: 30

  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Verify build output
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "Build successful"

      - name: Check bundle size
        run: |
          if [ -f "dist/assets/index.js" ]; then
            SIZE=$(stat -f%z "dist/assets/index.js" 2>/dev/null || stat -c%s "dist/assets/index.js")
            echo "Bundle size: $SIZE bytes"
            # Fail if bundle > 500KB (adjust as needed)
            if [ $SIZE -gt 512000 ]; then
              echo "Bundle too large: $SIZE bytes (max 500KB)"
              exit 1
            fi
          fi

  quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Run type checking
        run: npm run typecheck || echo "Type checking skipped (not configured)"

      - name: Analyze dependencies
        run: |
          npm audit --audit-level=moderate || echo "Vulnerabilities found"
          npm outdated || echo "Some packages are outdated"

  performance:
    name: Performance Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run performance benchmarks
        run: npm run test:performance

      - name: Performance regression check
        run: |
          echo "Checking for performance regressions..."
          # Add custom performance regression detection here
          # Compare with baseline metrics

      - name: Upload performance results
        uses: actions/upload-artifact@v4
        with:
          name: performance-results
          path: test-results/performance/
          retention-days: 90
